
<div class="container">
  <div class="col-md-6">
    <% @arrteams.each do |team| %>
      <%= team.name %>
    <% end %>
  </div>

  <div class="col-md-6">
    <div id="map" style="height: 500px;"></div>
  </div>
</div>


<script>
function initMap() {
  map = new google.maps.Map(document.getElementById('map'), {
    center: {lat:<%= @latitude %>, lng: <%= @longitude %>},
    zoom: 13
  });
  var input = /** @type {!HTMLInputElement} */(
      document.getElementById('pac-input'));

  var autocomplete = new google.maps.places.Autocomplete(input);
  autocomplete.bindTo('bounds', map);
  
  // マーカーとインフォウィンドウの配列を用意
  markers = [];
  infowindows = [];

  <% @arrteams.each do |team| %>
        
    //markerはこの関数の中で同じ変数
    var marker = new google.maps.Marker({
      position: new google.maps.LatLng(<%= team.latitude %>, <%= team.longitude %>),
      map: map
    });

    // マーカー配列にマーカを保存
    markers.push(marker);

    // マーカーがクリックされた時の処理
    marker.addListener('click', function() {
      
      
      var content = "<div>" + '<a href="user/teams/' + <%= team.id %> +'">' + '<br>' + "<h5><%= team.name %></h5>" + "</a>" + "</div>";
      

      // infowindowを作成
      var infowindow = new google.maps.InfoWindow({
        content: content,
        maxWidth: 280
      });

      infowindow.open(map, this);
      infowindows.push(infowindow);

      //infowindowが完全に読み込まれた時に実行される処理
      google.maps.event.addListener(infowindow, 'domready', function() {
        $('.average_rating_listing').raty({
          path: '/assets',
          readOnly: true,
        });
      });
    });
            
  <% end %>

  autocomplete.addListener('place_changed', function() {

    // すべてのinfowindowを消す
    infowindows.forEach(function(infowindow) {
      infowindow.close();
    });
    infowindows = [];

    // すべてのmarkerを消す
    markers.forEach(function(marker) {
        marker.setVisible(false);
    });
    markers = [];

    // If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
      map.setZoom(13);
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(13);  // Why 17? Because it looks good.
    }

    // 入力欄の場所の緯度経度情報を取得
    var lat = place.geometry.location.lat();
    var lng = place.geometry.location.lng();
        
    // 緯度経度情報をまとめる   
    var geolocation = [lat,lng];

    // 場所の住所
    var location = place.formatted_address;

    // autocompleteの入力欄が変更されたらurlも変更して履歴に残す
    url = "/search?utf8=✓&search="+place.formatted_address;
    
    window.history.pushState(null,null,url);

    $.ajax({
      url: '/ajaxsearch',
        // this data is data for sending to url
        data: {'geolocation': geolocation}
    });

  });
}

</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyC6HeRNgfz2k11k0i6NRiVSpa_egGxdwkg&libraries=places&callback=initMap">
</script>
