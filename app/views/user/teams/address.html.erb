<div class="container">
  <div class="col-md-3">
    <%= render 'partial/verticalnavbar'%>
  </div>
  <div class="col-md-9">
    <div class="panel panel-default">
      <div class="panel-heading">
        <div class="text-center">
          <span style="font-size:24px;">練習場所の編集</span>
        </div>
      </div>

      <div class="panel-body">

        <p>※場所または住所を入力し、Google Map上にマーカーが表示されることを確認してください。</p>          
        <%= form_for @team, url: user_team_path(@team) do |f| %>
          <div class="col-xs-12 col-md-8">
              <%= f.text_field :address, placeholder: "例: 代々木体育館", class: "form-control", id: "pac-input", required: "true" %>
          </div>
          <div class="actions text-center col-md-2">
            <%= f.submit "更新", class: "btn btn-danger" %>
          </div>
          <div id="map" class="col-xs-12 col-md-10 col-md-offset-1 margin-top-20"></div>
          <div id="infowindow-content">
            <img src="" width="16" height="16" id="place-icon">
            <span id="place-name"  class="title"></span><br>
            <span id="place-address"></span>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>





<script>
  // This example requires the Places library. Include the libraries=places
  // parameter when you first load the API. For example:
  // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

  function initMap() {
    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 35.6594709, lng: 139.7004051},
      zoom: 13
    });
    var input = document.getElementById('pac-input');
    var strictBounds = document.getElementById('strict-bounds-selector');

   

    var autocomplete = new google.maps.places.Autocomplete(input);

    // Bind the map's bounds (viewport) property to the autocomplete object,
    // so that the autocomplete requests use the current map bounds for the
    // bounds option in the request.
    autocomplete.bindTo('bounds', map);

    // Set the data fields to return when the user selects a place.
    autocomplete.setFields(
        ['address_components', 'geometry', 'icon', 'name']);

    var infowindow = new google.maps.InfoWindow();
    var infowindowContent = document.getElementById('infowindow-content');
    infowindow.setContent(infowindowContent);
    var marker = new google.maps.Marker({
      map: map,
      anchorPoint: new google.maps.Point(0, -29)
    });

    autocomplete.addListener('place_changed', function() {
      infowindow.close();
      marker.setVisible(false);
      var place = autocomplete.getPlace();
      if (!place.geometry) {
        // User entered the name of a Place that was not suggested and
        // pressed the Enter key, or the Place Details request failed.
        window.alert(place.name + "は設定できません。Google Map上にマーカーが表示されることを確認してください。");
        return;
      }

      // If the place has a geometry, then present it on a map.
      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(17);  // Why 17? Because it looks good.
      }
      marker.setPosition(place.geometry.location);
      marker.setVisible(true);

      var address = '';
      if (place.address_components) {
        address = [
          (place.address_components[0] && place.address_components[0].short_name || ''),
          (place.address_components[1] && place.address_components[1].short_name || ''),
          (place.address_components[2] && place.address_components[2].short_name || '')
        ].join(' ');
      }

      infowindowContent.children['place-icon'].src = place.icon;
      infowindowContent.children['place-name'].textContent = place.name;
      infowindowContent.children['place-address'].textContent = address;
      infowindow.open(map, marker);
    });

    // Sets a listener on a radio button to change the filter type on Places
    // Autocomplete.
    function setupClickListener(id, types) {
      var radioButton = document.getElementById(id);
      radioButton.addEventListener('click', function() {
        autocomplete.setTypes(types);
      });
    }

    setupClickListener('changetype-all', []);
    setupClickListener('changetype-address', ['address']);
    setupClickListener('changetype-establishment', ['establishment']);
    setupClickListener('changetype-geocode', ['geocode']);

    document.getElementById('use-strict-bounds')
        .addEventListener('click', function() {
          console.log('Checkbox clicked! New state=' + this.checked);
          autocomplete.setOptions({strictBounds: this.checked});
        });
  }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCpp21xGez-pp1H2wiDC5A-HHEi1-RDHus&libraries=places&callback=initMap"
        async defer></script>



