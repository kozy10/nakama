
<div id="slideshow">
	<p class="text-center">スポーツで
		<br>
		nakamaに出会おう
		<br>

    <% if (!user_signed_in?) %>
		  <%= link_to "登録する", new_user_registration_path, class: "btn btn-warning btn-block" %>
    <% end %>
	</p>
	<%= image_tag("/images/baseball.jpg", :width => "100%", :height => "100%", :class => "active") %>
	<%= image_tag("/images/basketball.jpg", :width => "100%", :height => "100%") %>
	<%= image_tag("/images/rio.jpg", :width => "100%", :height => "100%") %>
	<%= image_tag("/images/team.jpg", :width => "100%", :height => "100%",) %>
</div>

<% if @teams %>
  <div class="container top-teams">
    <h4>東京都渋谷区付近のチーム</h4>
    <div class="row">
      <% @teams.each do |team| %>
        <div class="col-xs-6 col-md-4">
          <div class="panel panel-default center-block">
            <%= link_to user_team_path(team) do %>
              <%= attachment_image_tag team, :profile_image, :fill,380, 200, format: 'jpeg', fallback: "/images/rio.jpg", class: "img-responsive" %>
              <div class="panel-body">
                <h6><%= team.sport.name %></h6>
                <h5><%= team.name %></h5>
                <h6><span class="glyphicon glyphicon-map-marker"></span><%= team.address %></h6>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
  </div>
<% end %>

<div class="container">
  <div class="row">
    <div class="col-md-12 text-center">
      <h2>nakamaの使い方</h2>
    </div>
  </div>
  <div class="row text-center">
    <div class="col-sm-4 col-md-4 margin-top-20">
      <%= image_tag("/images/search.jpeg", :width => "128px", :height => "128px") %>
      <h4>探す</h4>
      <p>住所や地名でチームを探しましょう。</p>
    </div>
    <div class="col-sm-4 col-md-4 margin-top-20">
      <%= image_tag("/images/goodjob.jpeg", :width => "128px", :height => "128px") %>
      <h4>参加する</h4>
      <p>参加ボタンを押して練習に参加しましょう。</p>
    </div>
    <div class="col-sm-4 col-md-4 margin-top-20">
      <%= image_tag("/images/people.jpeg", :width => "128px", :height => "128px") %>
      <h4>チームを作る</h4>
      <p>チームを作って新しいnakamaに出会いましょう。</p>
    </div>
  </div>
</div>

<script>
	//関数を定義
	function geoFindUser() {
    //ユーザーのブラウザがGeolocation APIに対応していた場合
    if (navigator.geolocation) {

      //getCurrentPositionメソッドで現在地を取得
      navigator.geolocation.getCurrentPosition(

        //現在地の取得に成功した場合の処理
        function(position) {

          //データを変数にして整理（position.coords.latitude/longitudeが座標）
          var lat = position.coords.latitude;
          var lng = position.coords.longitude;

	          //座標のデータをクエリパラメータとし、座標データを渡したいページに遷移させる
	          //Javascriptで文字列の中に変数を入れたいときは、バッククオートで囲む
	          window.location.href = `/"something"/searches?latitude=${lat}&longitude=${lng}`
         },

         //現在地の取得に失敗した場合の処理
         function (error) {
           //エラー情報を配列として定義
           var errorInfo = [
       "原因不明のエラーが発生しました…。" ,
     "位置情報の取得が許可されませんでした…。" ,
     "電波状況などで位置情報が取得できませんでした…。" ,
     "位置情報の取得に時間がかかり過ぎてタイムアウトしました…。"
       ] ;

     //エラーコードを変数に代入（エラーコードはgetCurrentPositionの引数として受け取っている）
     var errorNo = error.code ;
     //エラーメッセージに、先に定義したエラーコードと、エラー番号に対応した情報をalert表示させる
     var errorMessage = "[エラー番号: " + errorNo + "]\n" + errorInfo[ errorNo ] ;
     alert( errorMessage ) ;
         } 
         //オプション設定（10秒でタイムアウトになる）
         {
           "enableHighAccuracy": false,
           "timeout": 10000,
           "maximumAge": 0,
         }
      );
   }

   //ユーザーのブラウザがGeolocation APIに対応していなかった場合の処理
   else {
     var errorMessage = "お使いの端末は、GeoLacation APIに対応していません。" ;

     alert( errorMessage ) ;
   }
 }
</script>


